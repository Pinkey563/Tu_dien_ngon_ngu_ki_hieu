{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tran Anh Duc\\\\Downloads\\\\Web Sign React\\\\src\\\\VoiceInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport speechToText from './speechToText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = () => {\n  _s();\n  const [textInput, settextInput] = useState(\"\");\n  const [isListening, transcript, startListening, stopListening] = speechToText({\n    continuous: true\n  });\n  const startStopListening = () => {\n    isListening ? stopListening() : startListening();\n  };\n  const stopVoiceInput = () => {\n    settextInput(prevValue => prevValue + (transcript.length ? (prevValue.length ? \" \" : \"\") + transcript : \"\"));\n    stopListening();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startStopListening,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n_s(VoiceInput, \"cldfe2RBr553i3XJQ+7AhartoGE=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","speechToText","jsxDEV","_jsxDEV","VoiceInput","_s","textInput","settextInput","isListening","transcript","startListening","stopListening","continuous","startStopListening","stopVoiceInput","prevValue","length","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tran Anh Duc/Downloads/Web Sign React/src/VoiceInput.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport speechToText from './speechToText'\r\n\r\nconst VoiceInput = () => {\r\n    const [textInput, settextInput] = useState(\"\");\r\n    const [isListening, transcript, startListening, stopListening] = speechToText({continuous: true})\r\n    const startStopListening = () => {\r\n        isListening ? stopListening() : startListening()\r\n    }\r\n    const stopVoiceInput = () => {\r\n        settextInput(prevValue => prevValue + (transcript.length ? (prevValue.length ? \" \" : \"\") + transcript : \"\"))\r\n        stopListening()\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={startStopListening}>\r\n          {isListening ? 'Stop Listening' : 'Start Listening'}\r\n        </button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default VoiceInput"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,CAAC,GAAGV,YAAY,CAAC;IAACW,UAAU,EAAE;EAAI,CAAC,CAAC;EACjG,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7BL,WAAW,GAAGG,aAAa,CAAC,CAAC,GAAGD,cAAc,CAAC,CAAC;EACpD,CAAC;EACD,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzBP,YAAY,CAACQ,SAAS,IAAIA,SAAS,IAAIN,UAAU,CAACO,MAAM,GAAG,CAACD,SAAS,CAACC,MAAM,GAAG,GAAG,GAAG,EAAE,IAAIP,UAAU,GAAG,EAAE,CAAC,CAAC;IAC5GE,aAAa,CAAC,CAAC;EACnB,CAAC;EAED,oBACER,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEN,kBAAmB;MAAAI,QAAA,EAC/CT,WAAW,GAAG,gBAAgB,GAAG;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ,CAAC;AAAAlB,EAAA,CAlBKD,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAoBhB,eAAeA,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}