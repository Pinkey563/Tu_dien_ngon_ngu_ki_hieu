{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tran Anh Duc\\\\Downloads\\\\Web Sign React\\\\src\\\\SearchForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./SearchForm.css\";\nimport searchAndPlayVideo from \"./searchAndPlayVideo\";\nimport VoiceInput from \"./VoiceInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [videoTypes, setVideoTypes] = useState({\n    Real: false,\n    Animation: false,\n    Skeleton: false\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === \"checkbox\") {\n      setVideoTypes({\n        ...videoTypes,\n        [value]: checked\n      });\n    } else {\n      setWord(value);\n    }\n  };\n  const handleSearch = () => {\n    searchAndPlayVideo(word, videoTypes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"word\",\n        children: \"Nh\\u1EADp t\\u1EEB c\\u1EA7n t\\xECm:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"word\",\n        name: \"word\",\n        placeholder: \"Nh\\u1EADp t\\u1EEB v\\xE0o \\u0111\\xE2y\",\n        value: word,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"video-type\",\n        children: \"Ch\\u1ECDn ki\\u1EC3u video mu\\u1ED1n xem:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), [\"Real\", \"Animation\", \"Skeleton\"].map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"video-type\",\n          name: \"video-type\",\n          value: type,\n          checked: videoTypes[type],\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), type]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"searchButton\",\n          onClick: handleSearch,\n          children: \"T\\xECm ki\\u1EBFm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VoiceInput, {\n          word: word,\n          setWord: setWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"uakakgzRdpiVFVyc8YTNzkfxd6s=\");\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","searchAndPlayVideo","VoiceInput","jsxDEV","_jsxDEV","SearchForm","_s","word","setWord","videoTypes","setVideoTypes","Real","Animation","Skeleton","handleInputChange","e","name","value","type","checked","target","handleSearch","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tran Anh Duc/Downloads/Web Sign React/src/SearchForm.jsx"],"sourcesContent":["import React, { useState} from 'react';\r\nimport \"./SearchForm.css\";\r\nimport searchAndPlayVideo from \"./searchAndPlayVideo\";\r\nimport VoiceInput from \"./VoiceInput\";\r\n\r\nconst SearchForm = () => {\r\n  const [word, setWord] = useState(\"\");\r\n  const [videoTypes, setVideoTypes] = useState({\r\n    Real: false,\r\n    Animation: false,\r\n    Skeleton: false,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      setVideoTypes({ ...videoTypes, [value]: checked });\r\n    } else {\r\n      setWord(value);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    searchAndPlayVideo(word, videoTypes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text\">\r\n      <form>\r\n        <label htmlFor=\"word\">Nhập từ cần tìm:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"word\"\r\n            name=\"word\"\r\n            placeholder=\"Nhập từ vào đây\"\r\n            value={word}\r\n            onChange={handleInputChange}\r\n          />\r\n        <label htmlFor=\"video-type\">Chọn kiểu video muốn xem:</label>\r\n        {[\"Real\", \"Animation\", \"Skeleton\"].map((type) => (\r\n          <label key={type}>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"video-type\"\r\n              name=\"video-type\"\r\n              value={type}\r\n              checked={videoTypes[type]}\r\n              onChange={handleInputChange}\r\n            />\r\n            {type}\r\n          </label>\r\n        ))}\r\n        <div className=\"button\">\r\n          <button type=\"button\" id=\"searchButton\" onClick={handleSearch}>\r\n            Tìm kiếm\r\n          </button>\r\n          <VoiceInput word={word} setWord={setWord} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}