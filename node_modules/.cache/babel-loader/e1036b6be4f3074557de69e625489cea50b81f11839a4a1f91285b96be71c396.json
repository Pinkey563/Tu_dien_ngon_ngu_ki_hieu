{"ast":null,"code":"import React from 'react';\nfunction searchAndPlayVideo(word, videoTypes) {\n  const inputWord = word.toLowerCase();\n  const csvUrl = \"1_1000_data.csv\"; // Relative path to the CSV file\n  const skeFolder = \"/vidSke/\";\n  const aniFolder = \"/animeQIPEDCVid/animeQIPEDCVid/full/\";\n  const realVideo = document.querySelector(\".real\");\n  const animationVideo = document.querySelector(\".animation\");\n  const skeletonVideo = document.querySelector(\".skeleton\");\n  fetch(csvUrl).then(response => response.text()).then(text => {\n    const lines = text.split(\"\\n\");\n    let videoUrl = \"\";\n    let animationVideoPath = \"\";\n    let skeletonVideoPath = \"\";\n    const realChecked = videoTypes.Real;\n    const animationChecked = videoTypes.Animation;\n    const skeletonChecked = videoTypes.Skeleton;\n    for (const line of lines) {\n      const row = line.split(\",\");\n      const word = row[0].toLowerCase();\n      const videoId = row[2];\n      if (word === inputWord) {\n        if (realChecked) {\n          videoUrl = row[1];\n        }\n        animationVideoPath = Number(videoId) > 200 ? aniFolder + \"stylized_\" + (Number(videoId) + 1) + \".mp4\" : aniFolder + \"stylized_\" + videoId + \".mp4\";\n        skeletonVideoPath = skeFolder + videoId + \"..webm\";\n        break;\n      }\n    }\n    realVideo.src = realChecked ? videoUrl : \"\";\n    animationVideo.src = animationChecked ? animationVideoPath : \"\";\n    skeletonVideo.src = skeletonChecked ? skeletonVideoPath : \"\";\n    realVideo.style.visibility = realChecked ? \"visible\" : \"hidden\";\n    animationVideo.style.visibility = animationChecked ? \"visible\" : \"hidden\";\n    skeletonVideo.style.visibility = skeletonChecked ? \"visible\" : \"hidden\";\n    if (!videoUrl && !animationVideoPath && !skeletonVideoPath) {\n      alert(\"Không tìm thấy từ này trong từ điển.\");\n    }\n  }).catch(error => {\n    console.error(\"Error fetching CSV file:\", error);\n  });\n}\n;\nexport default searchAndPlayVideo;","map":{"version":3,"names":["React","searchAndPlayVideo","word","videoTypes","inputWord","toLowerCase","csvUrl","skeFolder","aniFolder","realVideo","document","querySelector","animationVideo","skeletonVideo","fetch","then","response","text","lines","split","videoUrl","animationVideoPath","skeletonVideoPath","realChecked","Real","animationChecked","Animation","skeletonChecked","Skeleton","line","row","videoId","Number","src","style","visibility","alert","catch","error","console"],"sources":["C:/Users/Tran Anh Duc/Downloads/Web Sign React/src/searchAndPlayVideo.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction searchAndPlayVideo(word, videoTypes) {\r\n  const inputWord = word.toLowerCase();\r\n  const csvUrl = \"1_1000_data.csv\"; // Relative path to the CSV file\r\n  const skeFolder = \"/vidSke/\";\r\n  const aniFolder = \"/animeQIPEDCVid/animeQIPEDCVid/full/\";\r\n  const realVideo = document.querySelector(\".real\");\r\n  const animationVideo = document.querySelector(\".animation\");\r\n  const skeletonVideo = document.querySelector(\".skeleton\");\r\n\r\n  fetch(csvUrl)\r\n    .then((response) => response.text())\r\n    .then((text) => {\r\n      const lines = text.split(\"\\n\");\r\n      let videoUrl = \"\";\r\n      let animationVideoPath = \"\";\r\n      let skeletonVideoPath = \"\";\r\n\r\n      const realChecked = videoTypes.Real;\r\n      const animationChecked = videoTypes.Animation;\r\n      const skeletonChecked = videoTypes.Skeleton;\r\n\r\n      for (const line of lines) {\r\n        const row = line.split(\",\");\r\n        const word = row[0].toLowerCase();\r\n        const videoId = row[2];\r\n\r\n        if (word === inputWord) {\r\n          if (realChecked) {\r\n            videoUrl = row[1];\r\n          }\r\n\r\n          animationVideoPath = (Number(videoId) > 200) ? aniFolder + \"stylized_\" + (Number(videoId) + 1) + \".mp4\" : aniFolder + \"stylized_\" + videoId + \".mp4\";\r\n          skeletonVideoPath = skeFolder + videoId + \"..webm\";\r\n          break;\r\n        }\r\n      }\r\n\r\n      realVideo.src = realChecked ? videoUrl : \"\";\r\n      animationVideo.src = animationChecked ? animationVideoPath : \"\";\r\n      skeletonVideo.src = skeletonChecked ? skeletonVideoPath : \"\";\r\n\r\n      realVideo.style.visibility = realChecked ? \"visible\" : \"hidden\";\r\n      animationVideo.style.visibility = animationChecked ? \"visible\" : \"hidden\";\r\n      skeletonVideo.style.visibility = skeletonChecked ? \"visible\" : \"hidden\";\r\n\r\n      if (!videoUrl && !animationVideoPath && !skeletonVideoPath ) {\r\n        alert(\"Không tìm thấy từ này trong từ điển.\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching CSV file:\", error);\r\n    });\r\n};\r\n\r\nexport default searchAndPlayVideo;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,kBAAkBA,CAACC,IAAI,EAAEC,UAAU,EAAE;EAC5C,MAAMC,SAAS,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EACpC,MAAMC,MAAM,GAAG,iBAAiB,CAAC,CAAC;EAClC,MAAMC,SAAS,GAAG,UAAU;EAC5B,MAAMC,SAAS,GAAG,sCAAsC;EACxD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EACjD,MAAMC,cAAc,GAAGF,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EAC3D,MAAME,aAAa,GAAGH,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;EAEzDG,KAAK,CAACR,MAAM,CAAC,CACVS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAK;IACd,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAC9B,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,iBAAiB,GAAG,EAAE;IAE1B,MAAMC,WAAW,GAAGpB,UAAU,CAACqB,IAAI;IACnC,MAAMC,gBAAgB,GAAGtB,UAAU,CAACuB,SAAS;IAC7C,MAAMC,eAAe,GAAGxB,UAAU,CAACyB,QAAQ;IAE3C,KAAK,MAAMC,IAAI,IAAIX,KAAK,EAAE;MACxB,MAAMY,GAAG,GAAGD,IAAI,CAACV,KAAK,CAAC,GAAG,CAAC;MAC3B,MAAMjB,IAAI,GAAG4B,GAAG,CAAC,CAAC,CAAC,CAACzB,WAAW,CAAC,CAAC;MACjC,MAAM0B,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC;MAEtB,IAAI5B,IAAI,KAAKE,SAAS,EAAE;QACtB,IAAImB,WAAW,EAAE;UACfH,QAAQ,GAAGU,GAAG,CAAC,CAAC,CAAC;QACnB;QAEAT,kBAAkB,GAAIW,MAAM,CAACD,OAAO,CAAC,GAAG,GAAG,GAAIvB,SAAS,GAAG,WAAW,IAAIwB,MAAM,CAACD,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAGvB,SAAS,GAAG,WAAW,GAAGuB,OAAO,GAAG,MAAM;QACpJT,iBAAiB,GAAGf,SAAS,GAAGwB,OAAO,GAAG,QAAQ;QAClD;MACF;IACF;IAEAtB,SAAS,CAACwB,GAAG,GAAGV,WAAW,GAAGH,QAAQ,GAAG,EAAE;IAC3CR,cAAc,CAACqB,GAAG,GAAGR,gBAAgB,GAAGJ,kBAAkB,GAAG,EAAE;IAC/DR,aAAa,CAACoB,GAAG,GAAGN,eAAe,GAAGL,iBAAiB,GAAG,EAAE;IAE5Db,SAAS,CAACyB,KAAK,CAACC,UAAU,GAAGZ,WAAW,GAAG,SAAS,GAAG,QAAQ;IAC/DX,cAAc,CAACsB,KAAK,CAACC,UAAU,GAAGV,gBAAgB,GAAG,SAAS,GAAG,QAAQ;IACzEZ,aAAa,CAACqB,KAAK,CAACC,UAAU,GAAGR,eAAe,GAAG,SAAS,GAAG,QAAQ;IAEvE,IAAI,CAACP,QAAQ,IAAI,CAACC,kBAAkB,IAAI,CAACC,iBAAiB,EAAG;MAC3Dc,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD,CAAC,CAAC;AACN;AAAC;AAED,eAAerC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}