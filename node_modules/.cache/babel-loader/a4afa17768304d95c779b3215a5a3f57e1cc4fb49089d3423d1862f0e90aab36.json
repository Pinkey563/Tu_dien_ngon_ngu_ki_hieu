{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tran Anh Duc\\\\Downloads\\\\Web Sign React\\\\src\\\\VoiceInput.jsx\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState } from 'react'\r\nimport speechToText from './speechToText'\r\n\r\nconst VoiceInput = () => {\r\n    const [textInput, settextInput] = useState(\"\");\r\n    const [isListening, transcript, startListening, stopListening] = speechToText({continuous: true})\r\n    const startStopListening = () => {\r\n        isListening ? stopListening() : startListening()\r\n    }\r\n    const stopVoiceInput = () => {\r\n        settextInput(prevValue => prevValue + (transcript.length ? (prevValue.length ? \" \" : \"\") + transcript : \"\"))\r\n        stopListening()\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={startStopListening}>\r\n          {isListening ? 'Stop Listening' : 'Start Listening'}\r\n        </button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default VoiceInput\r\n*/\nimport React, { useEffect } from 'react';\nimport speechToText from './speechToText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = _ref => {\n  _s();\n  let {\n    word,\n    setWord\n  } = _ref;\n  const [isListening, transcript, startListening, stopListening] = speechToText({\n    continuous: true\n  });\n  useEffect(() => {\n    if (transcript) {\n      setWord(transcript);\n    }\n  }, [transcript, setWord]);\n  const startStopListening = () => {\n    isListening ? stopListening() : startListening();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startStopListening,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useEffect","speechToText","jsxDEV","_jsxDEV","VoiceInput","_ref","_s","word","setWord","isListening","transcript","startListening","stopListening","continuous","startStopListening","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tran Anh Duc/Downloads/Web Sign React/src/VoiceInput.jsx"],"sourcesContent":["/*\r\nimport React, { useState } from 'react'\r\nimport speechToText from './speechToText'\r\n\r\nconst VoiceInput = () => {\r\n    const [textInput, settextInput] = useState(\"\");\r\n    const [isListening, transcript, startListening, stopListening] = speechToText({continuous: true})\r\n    const startStopListening = () => {\r\n        isListening ? stopListening() : startListening()\r\n    }\r\n    const stopVoiceInput = () => {\r\n        settextInput(prevValue => prevValue + (transcript.length ? (prevValue.length ? \" \" : \"\") + transcript : \"\"))\r\n        stopListening()\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={startStopListening}>\r\n          {isListening ? 'Stop Listening' : 'Start Listening'}\r\n        </button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default VoiceInput\r\n*/\r\nimport React, { useEffect } from 'react';\r\nimport speechToText from './speechToText';\r\n\r\nconst VoiceInput = ({ word, setWord }) => {\r\n  const [isListening, transcript, startListening, stopListening] = speechToText({ continuous: true });\r\n\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      setWord(transcript);\r\n    }\r\n  }, [transcript, setWord]);\r\n\r\n  const startStopListening = () => {\r\n    isListening ? stopListening() : startListening();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={startStopListening}>\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInput;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACnC,MAAM,CAACI,WAAW,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,CAAC,GAAGX,YAAY,CAAC;IAAEY,UAAU,EAAE;EAAK,CAAC,CAAC;EAEnGb,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,EAAE;MACdF,OAAO,CAACE,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,CAACA,UAAU,EAAEF,OAAO,CAAC,CAAC;EAEzB,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC/BL,WAAW,GAAGG,aAAa,CAAC,CAAC,GAAGD,cAAc,CAAC,CAAC;EAClD,CAAC;EAED,oBACER,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEH,kBAAmB;MAAAC,QAAA,EAC/CN,WAAW,GAAG,gBAAgB,GAAG;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CApBIF,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}